import tensorflow as tf
from tensorflow import keras
mnist = tf.keras.datasets.mnist
(x_train, y_train), (x_test, y_test) = mnist.load_data()
input_given = (28,28)
def create_model(x_train,x_test, y_train, y_test):
    model = tf.keras.models.Sequential([
      tf.keras.layers.Flatten(input_shape=input_given),
      tf.keras.layers.Dense(128, activation='relu'),
      tf.keras.layers.Flatten(),
      tf.keras.layers.Dense(10)
    ])
    predictions = model(x_train[:1]).numpy()
    tf.nn.softmax(predictions).numpy()
    loss_fn = tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True)
    loss_fn(y_train[:1], predictions)
    model.compile(optimizer = "adam", loss = loss_fn, metrics = ["accuracy"])
    model.fit(x_train, y_train, batch_size = 64, epochs=5)
    model.evaluate(x_test, y_test, batch_size = 28)
 
    return model
model = create_model(x_train, x_test, y_train, y_test)
model.summary()
