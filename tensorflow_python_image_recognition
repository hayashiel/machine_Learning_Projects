number_indexed = 0
try:
  # %tensorflow_version only exists in Colab.
  %tensorflow_version 2.x
except Exception:
  pass
import matplotlib.pyplot as plt
import tensorflow as tf
import keras
from keras.preprocessing.image import load_img
mnist = tf.keras.datasets.mnist
(x_train, y_train), (x_test, y_test) = mnist.load_data()

input_shape = (28,28)
def create_model(x_train,x_test, y_train, y_test):
    model = tf.keras.models.Sequential([
      tf.keras.layers.Flatten(input_shape=input_shape),
      tf.keras.layers.Dense(128,activation='relu'),
      tf.keras.layers.Flatten(),
      tf.keras.layers.Dense(10)
    ])
    predictions = model(x_train[:1]).numpy()
    tf.nn.softmax(predictions).numpy()
    loss_fn = tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True)
    loss_fn(y_train[:1], predictions)
    model.compile(optimizer = "adam", loss = loss_fn, metrics = ["accuracy"])
    model.fit(x_train, y_train, batch_size = 64, epochs=8)
    model.evaluate(x_test, y_test, batch_size = 28)
    return model
model = create_model(x_train, x_test, y_train, y_test)
model.summary()
img_class = model.predict(x_test[number_indexed].reshape(1,28,28))
print("Prediction: ", img_class.argmax())
print("Actual: ", y_test[number_indexed])
plt.imshow(x_test[number_indexed], cmap='Greys')
 
 
 
 
 
 
 
 


